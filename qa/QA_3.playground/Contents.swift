import UIKit
import PlaygroundSupport

1 //После async управление передается вызывающему потоку
DispatchQueue.global().asyncAfter(deadline: .now() + 1) {
    5 //После async управление передается вызывающему потоку
    7 //"A"
    DispatchQueue.global().async {
        print("A")
    }
    6 //Выполнение "B" в потоке пока п.5 передал вызов и еще не сработал
    print("B")
}
2 //После async управление передается вызывающему потоку
4 //Так как первый блок на таймере 1 секунда сработает "C"
DispatchQueue.main.async {
    print("C")
}
3 //Вызывающий поток вызывает "D"
print("D")


/*
 ○ C, D, A, B
 
 ○ A, B, C, D
 
 ○ C, D, B, A
 
 ● D, C, B, A
 
 ○ D, C, A, B
 */

/*
 После async управление передается вызывающему потоку,
 sync же блокирует вызывающий поток (последовательное выполнение)
 sync будет выполнять задачи последовательно внутри себя.
 main - главная очередь (обновление UI)
 global - пул очередей
 */
